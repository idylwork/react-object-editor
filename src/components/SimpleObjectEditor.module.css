.root {
  display: contents;

  --button-color: var(--simple-object-editor-button-color, 210, 202, 221);
  --border-color: var(--simple-object-editor-border-color, 200, 190, 204);
  --free-input-color: var(--simple-object-editor-free-input-color, 178, 27, 27);
}

.group {
  padding-left: 1rem;
}

.control {
  flex-grow: 1;
}

.listItem {
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.label {
  display: flex;
  align-items: center;
  font-size: 0.5rem;
  margin-top: 0.25rem;
}

.input {
  display: block;
  width: 100%;
  box-sizing: border-box;
  border: 1px solid rgb(var(--border-color));
  border-radius: 3px;
  font-size: 0.8rem;
  padding: 0.1rem;
  margin: 0;
}

.dummyInput {
  display: none;
}

.toggleInput {
  color: rgb(var(--border-color));
  user-select: none;
  cursor: pointer;
}

.dummyInput:checked + .toggleInput {
  color: unset;
}

.jsonControl {
  display: flex;
  flex-direction: column;
  height: 100%;

  > .input {
    flex-grow: 1;
  }
}

.jsonInput {
  height: 100%;
  resize: vertical;
}

.null {
  color: rgb(var(--border-color));
}

.freeInput {
  color: rgb(var(--free-input-color));
  background: rgba(var(--free-input-color), 0.05);
  border-style: dashed;
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
  font-weight: 700;
  color: rgb(var(--button-color));
  padding: 0 0.2em;
  height: 1rem;
  background: none;
  border: none;
  border-radius: 5px;
  padding-bottom: 0.2rem;
  cursor: pointer;
}

.button:hover {
  background: rgba(var(--button-color), 0.4);
}

.inputContainer {
  position: relative;
}

.inputContainer .button {
  position: absolute;
  right: 0;
  top: 0;
  height: calc(100% - 6px);
  width: 2em;
  font-size: 0.7rem;
  opacity: 0;
  transition: opacity 0.3s;
  padding: 0.4rem 0;
  margin: 3px;
}
.inputContainer:hover .button {
  opacity: 1;
}
.inputContainer:has(:focus) .button {
  display: none;
}
.inputContainer input[type="number"]::-webkit-outer-spin-button,
.inputContainer input[type="number"]::-webkit-inner-spin-button {
  visibility: hidden;
}
.inputContainer:has(:focus) input[type="number"]::-webkit-outer-spin-button,
.inputContainer:has(:focus) input[type="number"]::-webkit-inner-spin-button {
  visibility: visible;
}

.typeIcon {
  transform: scaleX(0.5);
  white-space: nowrap;
}
.typeIconNull {
  display: inline-block;
  width: 0.7em;
  height: 0.7em;
  border: 1px dotted rgb(var(--button-color));
}
.description {
  font-size: 0.5rem;
  color: var(--free-input-color);
}

.jsonButton {
  margin-left: auto;
  margin-top: 0.5rem;
}
